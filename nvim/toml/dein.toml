[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  let g:dein#plugin.build = cmd
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
'''

[[plugins]]
repo = 'Shougo/deol.nvim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'jacoborus/tender.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'ozelentok/denite-gtags'

[[plugins]]
repo = 'slim-template/vim-slim'
hook_add = '''
  autocmd BufRead,BufNewFile *.slim setfiletype slim
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_start_level = 2
'''

[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
  noremap <Leader>/ <Plug>(caw:hatpos:toggle)
  noremap <Leader>0 <Plug>(caw:zeropos:toggle)
'''
# 行の最初の文字の前にコメント文字をトグル
# 行頭にコメントをトグル

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_sign_column_always = 1
  let g:ale_lint_on_text_changed = 0
  let g:ale_lint_on_enter = 1
  noremap <Leader>k <Plug>(ale_previous_wrap)
  noremap <Leader>j <Plug>(ale_next_wrap)
'''
# 左端のカラムを常に表示
# 保存時のみ実行する
# ファイルを開いたときにlint実行
# Space + kで次の指摘へ、Space + jで前の指摘へ移動

[[plugins]]
repo = 'reireias/vim-cheatsheet'
hook_add = 'let g:cheatsheet#cheat_file = "~/.config/nvim/cheatsheet.md"'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = 'noremap <Leader>n :NERDTreeToggle<CR>'

[[plugins]]
repo = 'nixprime/cpsm'
hook_post_update = '''
  let g:dein#plugin.build = cmd
  let cmd = 'env PY3=ON ./install.sh'
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['denite-gtags']
hook_add = 'source ~/.config/nvim/royautoload/plugins/plugins-denite.vim'

[[plugins]]
repo = "tpope/vim-fugitive"
hook_add = 'source ~/.config/nvim/royautoload/plugins/plugins-vim-fugitive.vim'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'lighttiger2505/gtags.vim'
hook_add = '''
  " Options
  let g:Gtags_Auto_Map = 0
  let g:Gtags_OpenQuickfixWindow = 1
  " Keymap
  " Show definetion of function cousor word on quickfix
  nnoremap <silent>K :<C-u>exe("Gtags ".expand('<cword>'))<CR>
  " Show reference of cousor word on quickfix
  nnoremap <silent><Leader>t :<C-u>exe("Gtags -r ".expand('<cword>'))<CR>
'''

[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = '''
  let g:gen_tags#ctags_auto_gen = 1
  let g:gen_tags#gtags_auto_gen = 1
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0 "Disable default mappings
  nmap s <Plug>(easymotion-overwin-f2)
  " Gif config
  map <Leader>l <Plug>(easymotion-lineforward)
  map <Leader>j <Plug>(easymotion-j)
  map <Leader>k <Plug>(easymotion-k)
  map <Leader>h <Plug>(easymotion-linebackward)
  let g:EasyMotion_startofline = 0 " keep cursor column when JK motion
  let g:EasyMotion_smartcase = 1
'''
