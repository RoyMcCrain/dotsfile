#----------------------------------------------------------------------------------#
# 必須
#----------------------------------------------------------------------------------#
[[plugins]] # deinで必須
repo = 'Shougo/vimproc.vim'
build = 'make'

#----------------------------------------------------------------------------------#
# toml管理で便利
#----------------------------------------------------------------------------------#
[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

#----------------------------------------------------------------------------------#
# colorscheme
#----------------------------------------------------------------------------------#
[[plugins]]
repo = 'morhetz/gruvbox'
hook_add = '''
  colorscheme gruvbox
'''

#----------------------------------------------------------------------------------#
# statusline拡張
#----------------------------------------------------------------------------------#
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = 'source ~/.config/nvim/plugins/lightline.vim'

#----------------------------------------------------------------------------------#
# 非同期検証ツール
#----------------------------------------------------------------------------------#

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'tbodt/deoplete-tabnine'
build = './install.sh'
depends = ['deoplete.nvim']
hook_add = '''
  call deoplete#custom#var('tabnine', {
  \ 'line_limit': 500,
  \ 'max_num_results': 2,
  \ })
'''

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = 'source ~/.config/nvim/plugins/vim-lsp.vim'

[[plugins]]
repo = 'mattn/vim-lsp-settings'
merged = 0
hook_add = '''
  let g:lsp_settings = {
  \  'solargraph': {'disabled': v:true},
  \  'css-languageserver': {
  \    'workspace_config': {
  \      'css': {
  \        'validate': v:false
  \      },
  \      'scss': {
  \        'validate': v:false
  \      },
  \      'less': {
  \        'validate': v:false
  \      }
  \    }
  \  }
  \}
'''

[[plugins]]
repo = 'lighttiger2505/deoplete-vim-lsp'
depends = ['deoplete.nvim', 'vim-lsp']

[[plugins]]
repo = "deoplete-plugins/deoplete-zsh"
depends = ['deoplete.nvim']

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
  let g:ale_disable_lsp = 1
  let g:ale_sign_column_always = 1
  let g:ale_fix_on_save = 1
  let g:ale_fixers = {
  \   'ruby': ['rubocop'],
  \   'css': ['stylelint'],
  \   'scss': ['stylelint'],
  \   'sass': ['stylelint'],
  \   'less': ['stylelint'],
  \}
'''

#----------------------------------------------------------------------------------#
# インデント補助
#----------------------------------------------------------------------------------#
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_start_level = 2
  let g:indent_guides_guide_size = 1
'''

#----------------------------------------------------------------------------------#
# ファイルブラウザ補助
#----------------------------------------------------------------------------------#
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = 'source ~/.config/nvim/plugins/denite.vim'

[[plugins]]
repo = 'delphinus/vim-denite-node-modules'

[[plugins]]
repo = 'Shougo/neoyank.vim'
depends = ['denite.nvim']

[[plugins]]
repo = 'Shougo/neomru.vim'
depends = ['denite.nvim']

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = 'source ~/.config/nvim/plugins/defx.vim'

[[plugins]]
repo = 'kristijanhusak/defx-git'
depends = ['defx.nvim']

#----------------------------------------------------------------------------------#
# 高速検索ツール
#----------------------------------------------------------------------------------#

[[plugins]]
repo = 'liuchengxu/vim-clap'
on_cmd = 'Clap' # Clapコマンドが実行されるまで読み込みを遅延する
on_func = 'clap#installer#force_download()' # clap#installer#force_download()関数が実行されるまで読み込みを遅延する
hook_post_update = 'call clap#installer#force_download()' # vim-clapのインストール/アップデート後、clap#installer#force_download()を実行する

#----------------------------------------------------------------------------------#
# gitツール
#----------------------------------------------------------------------------------#
[[plugins]]
repo = "tpope/vim-fugitive"
hook_add = 'source ~/.config/nvim/plugins/vim-fugitive.vim'

[[plugins]] # github
repo = "tpope/vim-rhubarb"
depends = ['vim-fugitive']

[[plugins]]
repo = "chemzqm/denite-git"
depends = ['denite.nvim']

#----------------------------------------------------------------------------------#
# コメントアウト補助
#----------------------------------------------------------------------------------#
[[plugins]]
repo = 'tyru/caw.vim'
on_i = 1
hook_add = '''
  " 行の最初の文字の前にコメント文字をトグル
  nmap <Leader>z <Plug>(caw:hatpos:toggle)
  vmap <Leader>z <Plug>(caw:hatpos:toggle)
  " 行頭にコメントをトグル
  nmap <Leader>Z <Plug>(caw:zeropos:toggle)
  vmap <Leader>Z <Plug>(caw:zeropos:toggle)
'''

#----------------------------------------------------------------------------------#
# 移動補完
#----------------------------------------------------------------------------------#
[[plugins]] # vimの移動コマンド拡張
repo = 'easymotion/vim-easymotion'
hook_add = '''
  " Disable default mappings
  let g:EasyMotion_do_mapping = 0
  nmap s <Plug>(easymotion-overwin-f2)
  nnoremap [EasyM] <Nop>
  nmap <Leader><Space> [EasyM]

  " Gif config
  map <silent> [EasyM]n <Plug>(easymotion-lineforward)
  map <silent> [EasyM]h <Plug>(easymotion-j)
  map <silent> [EasyM]t <Plug>(easymotion-k)
  map <silent> [EasyM]d <Plug>(easymotion-linebackward)
  " keep cursor column when JK motion
  let g:EasyMotion_startofline = 0 
  let g:EasyMotion_smartcase = 1
'''

#----------------------------------------------------------------------------------#
# 置き換え強化
#----------------------------------------------------------------------------------#
[[plugins]]
repo = 'tpope/vim-abolish'
# crs "SnakeCase" → "snake_case"
# crm "mixed_case" → "MixedCase"
# crc "camel_case" → "camelCase"
# cru "upper_case" → "UPPER_CASE"

[[plugins]]
repo = "tpope/vim-surround"
# [e] 囲いの文字
# [d] 目的の文字
# ds [e] delete surround
# cs [e] [d] change surround
# ys iw [d] you surround

#----------------------------------------------------------------------------------#
# カッコ補完
#----------------------------------------------------------------------------------#
[[plugins]]
repo = 'cohama/lexima.vim'

#----------------------------------------------------------------------------------#
# terminal拡張
#----------------------------------------------------------------------------------#
[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = '''
  " 【spc + T】 float windowでターミナルを表示
  nnoremap <silent><Leader>T :<C-u>Deol -split=floating<CR>
  " 【ESC】 ターミナルモードから抜ける
  tnoremap <ESC><ESC>   <C-\><C-n>
'''
